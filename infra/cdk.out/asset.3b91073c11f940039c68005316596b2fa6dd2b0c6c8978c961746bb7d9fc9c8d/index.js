"use strict";var H=Object.create;var m=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var U=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var I=(t,e)=>{for(var n in e)m(t,n,{get:e[n],enumerable:!0})},O=(t,e,n,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of P(e))!F.call(t,s)&&s!==n&&m(t,s,{get:()=>e[s],enumerable:!(r=x(e,s))||r.enumerable});return t};var K=(t,e,n)=>(n=t!=null?H(U(t)):{},O(e||!t||!t.__esModule?m(n,"default",{value:t,enumerable:!0}):n,t)),L=t=>O(m({},"__esModule",{value:!0}),t);var Z={};I(Z,{handler:()=>Q});module.exports=L(Z);var y=K(require("crypto")),A=require("@aws-sdk/client-dynamodb"),l=require("@aws-sdk/lib-dynamodb"),S=process.env.GITHUB_WEBHOOK_SECRET||"",T=process.env.GITHUB_ACCESS_TOKEN||"",h=process.env.REPOINFO_TABLE,j=Number(process.env.CF_WATTS??65),G=Number(process.env.CF_G_PER_KWH??400),_=l.DynamoDBDocumentClient.from(new A.DynamoDBClient({})),C=t=>String(t).padStart(2,"0"),N=(t=new Date)=>`${t.getUTCFullYear()}-${C(t.getUTCMonth()+1)}-${C(t.getUTCDate())}`,g=t=>({statusCode:200,headers:v(),body:JSON.stringify(t)}),M=(t,e)=>({statusCode:t,headers:v(),body:JSON.stringify(e)}),v=()=>({"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST,OPTIONS","Access-Control-Allow-Headers":"Content-Type,X-GitHub-Event,X-Hub-Signature-256,X-GitHub-Delivery,X-Rebuild"}),w=(t,e)=>t.headers?.[e]??t.headers?.[e.toLowerCase()],X=t=>t.isBase64Encoded?Buffer.from(t.body||"","base64"):typeof t.body=="string"?Buffer.from(t.body,"utf8"):Buffer.from(JSON.stringify(t.body||{}),"utf8");function W(t,e){if(!t||!S)return!1;let n=Buffer.from("sha256="+y.default.createHmac("sha256",S).update(e).digest("hex"),"utf8"),r=Buffer.from(t,"utf8");return r.length===n.length&&y.default.timingSafeEqual(r,n)}function k(){let t={"User-Agent":"cloudguardian-bot",Accept:"application/vnd.github+json"};return T&&(t.Authorization=`Bearer ${T}`),t}async function J(t,e){let n=e?`https://api.github.com/orgs/${t}/repos`:`https://api.github.com/users/${t}/repos`,r=[];for(let s=1;;s++){let i=`${n}?per_page=100&page=${s}`,u=await fetch(i,{headers:k()});if(!u.ok)break;let o=await u.json();if(!o.length)break;for(let a of o)r.push({full_name:a.full_name,archived:a.archived});if(o.length<100)break}return r}async function $(t,e){let n=await fetch(`https://api.github.com/repos/${t}/${e}/languages`,{headers:k()});if(!n.ok)return{};let r=await n.json(),s={};for(let[i,u]of Object.entries(r)){let o=Number(u);Number.isNaN(o)||(s[i]=o)}return s}async function d(t,e,n){await _.send(new l.UpdateCommand({TableName:h,Key:{pk:t,sk:e},UpdateExpression:"SET #l=:l, #u=:u, #id=:id",ExpressionAttributeNames:{"#l":"languages_bytes","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":l":n,":u":new Date().toISOString(),":id":t}}))}async function R(t,e){if(!e||Number.isNaN(e))return;let n=new Date().toISOString(),r=N();await _.send(new l.UpdateCommand({TableName:h,Key:{pk:t,sk:"stats#overall"},UpdateExpression:"ADD #c :v SET #u=:u, #id=:id",ExpressionAttributeNames:{"#c":"carbon_mg_total","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":v":e,":u":n,":id":t}})),await _.send(new l.UpdateCommand({TableName:h,Key:{pk:t,sk:`stats#${r}`},UpdateExpression:"ADD #c :v SET #u=:u, #id=:id",ExpressionAttributeNames:{"#c":"carbon_mg_day","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":v":e,":u":n,":id":t}}))}function z(t,e){for(let[n,r]of Object.entries(e))t[n]=(t[n]||0)+(r||0);return t}async function V(t,e){let n=await J(t,e),r=N(),s=`owner#${t}`,i={},u=async o=>{await Promise.all(o.map(async a=>{if(!a||a.archived)return;let[b,f]=a.full_name.split("/"),c=await $(b,f),p=`repo#${a.full_name}`;await d(p,"stats#overall",c),await d(p,`stats#${r}`,c),z(i,c)}))};for(let o=0;o<n.length;o+=6)await u(n.slice(o,o+6));return await d(s,"stats#overall",i),await d(s,`stats#${r}`,i),{repos:n.length,languages:Object.keys(i).length}}function q(t){if(typeof t.run_duration_ms=="number")return t.run_duration_ms;let e=t.created_at?Date.parse(t.created_at):NaN,n=t.updated_at?Date.parse(t.updated_at):NaN;return!Number.isNaN(e)&&!Number.isNaN(n)&&n>e?n-e:0}function Y(t){let e=j/1e3*(t/36e5)*G;return Math.max(0,Math.round(e*1e3))}var Q=async t=>{if(t.requestContext?.http?.method==="OPTIONS")return g({ok:!0});let e=X(t),n=w(t,"X-Hub-Signature-256"),r=w(t,"X-GitHub-Event")||"",s=w(t,"X-Rebuild")==="all";if(!W(n,e))return M(401,{error:"invalid signature"});let i=JSON.parse(e.toString("utf8"));if(r==="ping")return g({pong:!0});let u=i.repository||{},o=u.full_name||"unknown/unknown",a=u.owner?.login||o.split("/")[0]||"unknown",b=u.owner?.type==="Organization";if(s||r==="push"){let f=await V(a,!!b);return g({ok:!0,evt:r,owner:a,summary:f})}if(r==="workflow_run"){let f=i.workflow_run||{},c=Y(q(f));await R(`repo#${o}`,c),await R(`owner#${a}`,c);let[p,B]=o.split("/"),E=await $(p,B),D=N();return await d(`repo#${o}`,"stats#overall",E),await d(`repo#${o}`,`stats#${D}`,E),g({ok:!0,evt:r,owner:a,carbon_mg:c})}return g({ok:!0,ignored:r})};0&&(module.exports={handler});
