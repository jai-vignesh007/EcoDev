"use strict";var I=Object.create;var h=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var z=(t,e)=>{for(var n in e)h(t,n,{get:e[n],enumerable:!0})},R=(t,e,n,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of W(e))!V.call(t,s)&&s!==n&&h(t,s,{get:()=>e[s],enumerable:!(a=L(e,s))||a.enumerable});return t};var q=(t,e,n)=>(n=t!=null?I(J(t)):{},R(e||!t||!t.__esModule?h(n,"default",{value:t,enumerable:!0}):n,t)),Y=t=>R(h({},"__esModule",{value:!0}),t);var ut={};z(ut,{handler:()=>it});module.exports=Y(ut);var C=q(require("crypto")),H=require("@aws-sdk/client-dynamodb"),m=require("@aws-sdk/lib-dynamodb"),v=process.env.GITHUB_WEBHOOK_SECRET||"",D=process.env.GITHUB_ACCESS_TOKEN||"",k=process.env.REPOINFO_TABLE,Q=Number(process.env.CF_WATTS??65),Z=Number(process.env.CF_G_PER_KWH??400),E=m.DynamoDBDocumentClient.from(new H.DynamoDBClient({})),B=t=>String(t).padStart(2,"0"),T=t=>{let e=typeof t=="number"||typeof t=="string"?new Date(t):t;return`${e.getUTCFullYear()}-${B(e.getUTCMonth()+1)}-${B(e.getUTCDate())}`},P=()=>T(new Date),N=()=>new Date().toISOString(),K={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST,OPTIONS","Access-Control-Allow-Headers":"Content-Type,X-GitHub-Event,X-Hub-Signature-256,X-GitHub-Delivery,X-Rebuild,X-Backfill,X-Backfill-Since"},f=t=>({statusCode:200,headers:K,body:JSON.stringify(t)}),tt=(t,e)=>({statusCode:t,headers:K,body:JSON.stringify(e)}),w=(t,e)=>t.headers?.[e]??t.headers?.[e.toLowerCase()],et=t=>t.isBase64Encoded?Buffer.from(t.body||"","base64"):typeof t.body=="string"?Buffer.from(t.body,"utf8"):Buffer.from(JSON.stringify(t.body||{}),"utf8");function nt(t,e){if(!t||!v)return!1;let n=Buffer.from("sha256="+C.default.createHmac("sha256",v).update(e).digest("hex"),"utf8"),a=Buffer.from(t,"utf8");return a.length===n.length&&C.default.timingSafeEqual(a,n)}function A(){let t={"User-Agent":"cloudguardian-bot",Accept:"application/vnd.github+json"};return D&&(t.Authorization=`Bearer ${D}`),t}async function U(t,e){let n=e?`https://api.github.com/orgs/${t}/repos`:`https://api.github.com/users/${t}/repos`,a=[];for(let s=1;;s++){let o=await fetch(`${n}?per_page=100&page=${s}`,{headers:A()});if(!o.ok)break;let u=await o.json();if(!u.length)break;for(let r of u)a.push({full_name:r.full_name,archived:r.archived});if(u.length<100)break}return a}async function X(t,e){let n=await fetch(`https://api.github.com/repos/${t}/${e}/languages`,{headers:A()});if(!n.ok)return{};let a=await n.json(),s={};for(let[o,u]of Object.entries(a)){let r=Number(u);Number.isNaN(r)||(s[o]=r)}return s}async function at(t,e,n){let a=[];for(let s=1;;s++){let o=await fetch(`https://api.github.com/repos/${t}/${e}/actions/runs?per_page=100&page=${s}&status=completed`,{headers:A()});if(!o.ok)break;let u=await o.json(),r=Array.isArray(u.workflow_runs)?u.workflow_runs:[];if(!r.length)break;for(let l of r)n&&(l.created_at?Date.parse(l.created_at):0)<Date.parse(n)||a.push(l);if(r.length<100)break}return a}function j(t){if(typeof t.run_duration_ms=="number")return t.run_duration_ms;let e=t.created_at?Date.parse(t.created_at):NaN,n=t.updated_at?Date.parse(t.updated_at):NaN;return!Number.isNaN(e)&&!Number.isNaN(n)&&n>e?n-e:0}function F(t){let e=Q/1e3*(t/36e5)*Z;return Math.max(0,Math.round(e*1e3))}async function p(t,e,n){await E.send(new m.UpdateCommand({TableName:k,Key:{pk:t,sk:e},UpdateExpression:"SET #l=:l, #u=:u, #id=:id",ExpressionAttributeNames:{"#l":"languages_bytes","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":l":n,":u":N(),":id":t}}))}async function st(t,e){await E.send(new m.UpdateCommand({TableName:k,Key:{pk:t,sk:"meta#latest"},UpdateExpression:"SET #sha=:sha, #msg=:msg, #auth=:auth, #t=:t, #u=:u, #id=:id",ExpressionAttributeNames:{"#sha":"commit_sha","#msg":"commit_message","#auth":"commit_author","#t":"commit_time_iso","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":sha":e.sha??"",":msg":e.msg??"",":auth":e.author??"",":t":e.time_iso??"",":u":N(),":id":t}}))}async function y(t,e){await E.send(new m.UpdateCommand({TableName:k,Key:{pk:t,sk:"stats#overall"},UpdateExpression:"ADD #c :v SET #u=:u, #id=:id",ExpressionAttributeNames:{"#c":"carbon_mg_total","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":v":e,":u":N(),":id":t}}))}async function _(t,e,n){await E.send(new m.UpdateCommand({TableName:k,Key:{pk:t,sk:`stats#${e}`},UpdateExpression:"ADD #d :v SET #u=:u, #id=:id",ExpressionAttributeNames:{"#d":"carbon_mg_day","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":v":n,":u":N(),":id":t}}))}function x(t,e){for(let[n,a]of Object.entries(e))t[n]=(t[n]||0)+(a||0);return t}async function rt(t,e){let n=await U(t,e),a=P(),s=`owner#${t}`,o={},u={};for(let r=0;r<n.length;r+=6)await Promise.all(n.slice(r,r+6).map(async l=>{if(!l||l.archived)return;let[c,g]=l.full_name.split("/"),d=await X(c,g),i=`repo#${l.full_name}`;await p(i,"stats#overall",d),await p(i,`stats#${a}`,d),x(o,d),x(u,d)}));return await p(s,"stats#overall",o),await p(s,`stats#${a}`,u),{repos:n.length,langs:Object.keys(o).length}}async function ot(t,e,n){let a=await U(t,e);for(let s=0;s<a.length;s+=3)await Promise.all(a.slice(s,s+3).map(async o=>{if(!o||o.archived)return;let[u,r]=o.full_name.split("/"),l=await at(u,r,n);for(let c of l){let g=j(c),d=F(g);if(d<=0)continue;let i=T(c.created_at||c.updated_at||Date.now());await y(`repo#${o.full_name}`,d),await _(`repo#${o.full_name}`,i,d),await y(`owner#${t}`,d),await _(`owner#${t}`,i,d)}}));return{repos:a.length}}var it=async t=>{if(t.requestContext?.http?.method==="OPTIONS")return f({ok:!0});let e=et(t),n=w(t,"X-Hub-Signature-256");if(!nt(n,e))return tt(401,{error:"invalid signature"});let a=w(t,"X-GitHub-Event")||"",s=w(t,"X-Rebuild")==="all",o=w(t,"X-Backfill")==="carbon",u=w(t,"X-Backfill-Since"),r=JSON.parse(e.toString("utf8"));if(a==="ping")return f({pong:!0});let l=r.repository||{},c=l.full_name||"unknown/unknown",g=l.owner?.login||c.split("/")[0]||"unknown",d=l.owner?.type==="Organization";if(o){let i=await ot(g,!!d,u);return f({ok:!0,mode:"backfill-carbon",owner:g,since:u||null,summary:i})}if(a==="push"){let i=r.head_commit||{};await st(`repo#${c}`,{sha:i.id,msg:i.message,author:i.author?.name??i.author?.username,time_iso:i.timestamp});let O=await rt(g,!!d);return f({ok:!0,evt:a,owner:g,updated:O})}if(a==="workflow_run"){let i=r.workflow_run||{},O=j(i),b=F(O),$=T(i.created_at||i.updated_at||Date.now());await y(`repo#${c}`,b),await _(`repo#${c}`,$,b),await y(`owner#${g}`,b),await _(`owner#${g}`,$,b);let[M,G]=c.split("/"),S=await X(M,G);return await p(`repo#${c}`,"stats#overall",S),await p(`repo#${c}`,`stats#${P()}`,S),f({ok:!0,evt:a,owner:g,repo:c,carbon_mg:b,day:$})}return f({ok:!0,ignored:a})};0&&(module.exports={handler});
