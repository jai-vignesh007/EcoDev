"use strict";var L=Object.create;var _=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var J=Object.getOwnPropertyNames;var V=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var Y=(t,e)=>{for(var n in e)_(t,n,{get:e[n],enumerable:!0})},x=(t,e,n,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of J(e))!q.call(t,s)&&s!==n&&_(t,s,{get:()=>e[s],enumerable:!(a=z(e,s))||a.enumerable});return t};var Q=(t,e,n)=>(n=t!=null?L(V(t)):{},x(e||!t||!t.__esModule?_(n,"default",{value:t,enumerable:!0}):n,t)),Z=t=>x(_({},"__esModule",{value:!0}),t);var lt={};Y(lt,{handler:()=>ct});module.exports=Z(lt);var A=Q(require("crypto")),U=require("@aws-sdk/client-dynamodb"),p=require("@aws-sdk/lib-dynamodb"),H=process.env.GITHUB_WEBHOOK_SECRET||"",X=process.env.GITHUB_ACCESS_TOKEN||"",E=process.env.REPOINFO_TABLE,tt=Number(process.env.CF_WATTS??65),et=Number(process.env.CF_G_PER_KWH??400),N=p.DynamoDBDocumentClient.from(new U.DynamoDBClient({})),P=t=>String(t).padStart(2,"0"),S=t=>{let e=typeof t=="number"||typeof t=="string"?new Date(t):t;return`${e.getUTCFullYear()}-${P(e.getUTCMonth()+1)}-${P(e.getUTCDate())}`},j=()=>S(new Date),T=()=>new Date().toISOString(),F={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST,OPTIONS","Access-Control-Allow-Headers":"Content-Type,X-GitHub-Event,X-Hub-Signature-256,X-GitHub-Delivery,X-Rebuild,X-Backfill,X-Backfill-Since,X-Owner,X-Owner-Type"},b=t=>({statusCode:200,headers:F,body:JSON.stringify(t)}),nt=(t,e)=>({statusCode:t,headers:F,body:JSON.stringify(e)}),g=(t,e)=>t.headers?.[e]??t.headers?.[e.toLowerCase()],at=t=>t.isBase64Encoded?Buffer.from(t.body||"","base64"):typeof t.body=="string"?Buffer.from(t.body,"utf8"):Buffer.from(JSON.stringify(t.body||{}),"utf8");function st(t,e){if(!t||!H)return!1;let n=Buffer.from("sha256="+A.default.createHmac("sha256",H).update(e).digest("hex"),"utf8"),a=Buffer.from(t,"utf8");return a.length===n.length&&A.default.timingSafeEqual(a,n)}function R(){let t={"User-Agent":"cloudguardian-bot",Accept:"application/vnd.github+json"};return X&&(t.Authorization=`Bearer ${X}`),t}async function M(t,e){let n=e?`https://api.github.com/orgs/${t}/repos`:`https://api.github.com/users/${t}/repos`,a=[];for(let s=1;;s++){let o=`${n}?per_page=100&page=${s}&type=all&sort=full_name&direction=asc`,i=await fetch(o,{headers:R()});if(!i.ok){console.warn("listOwnerRepos failed",{owner:t,isOrg:e,status:i.status,url:o,txt:await i.text()});break}let u=await i.json();if(!u.length)break;for(let c of u)a.push({full_name:c.full_name,archived:c.archived});if(u.length<100)break}return a}async function G(t,e){let n=await fetch(`https://api.github.com/repos/${t}/${e}/languages`,{headers:R()});if(!n.ok)return{};let a=await n.json(),s={};for(let[o,i]of Object.entries(a)){let u=Number(i);Number.isNaN(u)||(s[o]=u)}return s}async function rt(t,e,n){let a=[];for(let s=1;;s++){let o=`https://api.github.com/repos/${t}/${e}/actions/runs?per_page=100&page=${s}&status=completed`,i=await fetch(o,{headers:R()});if(!i.ok){console.warn("listWorkflowRuns failed",{owner:t,repo:e,status:i.status});break}let u=await i.json(),c=Array.isArray(u.workflow_runs)?u.workflow_runs:[];if(!c.length)break;for(let d of c)n&&(d.created_at?Date.parse(d.created_at):0)<Date.parse(n)||a.push(d);if(c.length<100)break}return a}function I(t){if(typeof t.run_duration_ms=="number")return t.run_duration_ms;let e=t.created_at?Date.parse(t.created_at):NaN,n=t.updated_at?Date.parse(t.updated_at):NaN;return!Number.isNaN(e)&&!Number.isNaN(n)&&n>e?n-e:0}function W(t){let e=tt/1e3*(t/36e5)*et;return Math.max(0,Math.round(e*1e3))}async function h(t,e,n){await N.send(new p.UpdateCommand({TableName:E,Key:{pk:t,sk:e},UpdateExpression:"SET #l=:l, #u=:u, #id=:id",ExpressionAttributeNames:{"#l":"languages_bytes","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":l":n,":u":T(),":id":t}}))}async function ot(t,e){await N.send(new p.UpdateCommand({TableName:E,Key:{pk:t,sk:"meta#latest"},UpdateExpression:"SET #sha=:sha, #msg=:msg, #auth=:auth, #t=:t, #u=:u, #id=:id",ExpressionAttributeNames:{"#sha":"commit_sha","#msg":"commit_message","#auth":"commit_author","#t":"commit_time_iso","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":sha":e.sha??"",":msg":e.msg??"",":auth":e.author??"",":t":e.time_iso??"",":u":T(),":id":t}}))}async function k(t,e){await N.send(new p.UpdateCommand({TableName:E,Key:{pk:t,sk:"stats#overall"},UpdateExpression:"ADD #c :v SET #u=:u, #id=:id",ExpressionAttributeNames:{"#c":"carbon_mg_total","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":v":e,":u":T(),":id":t}}))}async function O(t,e,n){await N.send(new p.UpdateCommand({TableName:E,Key:{pk:t,sk:`stats#${e}`},UpdateExpression:"ADD #d :v SET #u=:u, #id=:id",ExpressionAttributeNames:{"#d":"carbon_mg_day","#u":"updated_at","#id":"id"},ExpressionAttributeValues:{":v":n,":u":T(),":id":t}}))}function K(t,e){for(let[n,a]of Object.entries(e))t[n]=(t[n]||0)+(a||0);return t}async function it(t,e){let n=await M(t,e),a=j(),s=`owner#${t}`,o={},i={};for(let u=0;u<n.length;u+=6)await Promise.all(n.slice(u,u+6).map(async c=>{if(!c||c.archived)return;let[d,f]=c.full_name.split("/"),r=await G(d,f),l=`repo#${c.full_name}`;await h(l,"stats#overall",r),await h(l,`stats#${a}`,r),K(o,r),K(i,r)}));return await h(s,"stats#overall",o),await h(s,`stats#${a}`,i),{repos:n.length,langs:Object.keys(o).length}}async function ut(t,e,n){let a=await M(t,e);for(let s=0;s<a.length;s+=3)await Promise.all(a.slice(s,s+3).map(async o=>{if(!o||o.archived)return;let[i,u]=o.full_name.split("/"),c=await rt(i,u,n);for(let d of c){let f=I(d),r=W(f);if(r<=0)continue;let l=S(d.created_at||d.updated_at||Date.now());await k(`repo#${o.full_name}`,r),await O(`repo#${o.full_name}`,l,r),await k(`owner#${t}`,r),await O(`owner#${t}`,l,r)}}));return{repos:a.length}}var ct=async t=>{if(t.requestContext?.http?.method==="OPTIONS")return b({ok:!0});let e=at(t),n=g(t,"X-Hub-Signature-256");if(!st(n,e))return nt(401,{error:"invalid signature"});let a=g(t,"X-GitHub-Event")||"",s=g(t,"X-Rebuild")==="all",o=g(t,"X-Backfill")==="carbon",i=g(t,"X-Backfill-Since"),u=g(t,"X-Owner"),c=g(t,"X-Owner-Type"),d=JSON.parse(e.toString("utf8"));if(a==="ping")return b({pong:!0});let f=d.repository||{},r=f.full_name||"unknown/unknown",l=u||f.owner?.login||r.split("/")[0]||"unknown",w=c?c==="Organization":f.owner?.type==="Organization";if(o){let m=await ut(l,!!w,i);return b({ok:!0,mode:"backfill-carbon",owner:l,isOrg:w,since:i||null,summary:m})}if(a==="push"||s){let m=d.head_commit||{};r&&(m.id||m.timestamp)&&await ot(`repo#${r}`,{sha:m.id,msg:m.message,author:m.author?.name??m.author?.username,time_iso:m.timestamp});let $=await it(l,!!w);return b({ok:!0,evt:a||"manual-rebuild",owner:l,isOrg:w,updated:$})}if(a==="workflow_run"){let m=d.workflow_run||{},$=I(m),y=W($),C=S(m.created_at||m.updated_at||Date.now());await k(`repo#${r}`,y),await O(`repo#${r}`,C,y),await k(`owner#${l}`,y),await O(`owner#${l}`,C,y);let[v,D]=r.split("/");if(v&&D){let B=await G(v,D);await h(`repo#${r}`,"stats#overall",B),await h(`repo#${r}`,`stats#${j()}`,B)}return b({ok:!0,evt:a,owner:l,isOrg:w,repo:r,carbon_mg:y,day:C})}return b({ok:!0,ignored:a,owner:l,isOrg:w})};0&&(module.exports={handler});
